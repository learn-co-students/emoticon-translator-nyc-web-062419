[32m.[0m[32m.[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m

Failures:

  1) #load_library return value has two keys, 'get_meaning' and 'get_emoticon'
     [31mFailure/Error: [0m[[31m[1;31m"[0m[31mget_emoticon[1;31m"[0m[31m[0m, [31m[1;31m"[0m[31mget_meaning[1;31m"[0m[31m[0m].each { |key| [32mexpect[0m(result.keys).to include(key) }[0m
     [31m  expected ["angel", "angry", "bored", "confused", "embarrased", "fish", "glasses", "grinning", "happy", "kiss", "sad", "surprised", "wink"] to include "get_emoticon"[0m
     [36m# ./spec/translator_spec.rb:16:in `block (4 levels) in <top (required)>'[0m
     [36m# ./spec/translator_spec.rb:16:in `each'[0m
     [36m# ./spec/translator_spec.rb:16:in `block (3 levels) in <top (required)>'[0m

  2) #load_library return value the keys 'get_meaning' and 'get_emoticon' point to inner hashes
     [31mFailure/Error: [0m[[31m[1;31m"[0m[31mget_emoticon[1;31m"[0m[31m[0m, [31m[1;31m"[0m[31mget_meaning[1;31m"[0m[31m[0m].each { |key| [32mexpect[0m(result[key].class).to eq([1;34;4mHash[0m) }[0m
     [31m[0m
     [31m  expected: Hash[0m
     [31m       got: NilClass[0m
     [31m[0m
     [31m  (compared using ==)[0m
     [31m[0m
     [31m  Diff:[0m[0m
     [31m  [0m[34m@@ -1,2 +1,2 @@[0m
     [31m  [0m[31m-Hash[0m
     [31m  [0m[32m+NilClass[0m
     [31m  [0m[0m
     [36m# ./spec/translator_spec.rb:21:in `block (4 levels) in <top (required)>'[0m
     [36m# ./spec/translator_spec.rb:21:in `each'[0m
     [36m# ./spec/translator_spec.rb:21:in `block (3 levels) in <top (required)>'[0m

  3) #load_library return value the keys inside the 'get_meaning' hash are the Japanese emoticons
     [31mFailure/Error: [0m[32mexpect[0m(result[[31m[1;31m'[0m[31mget_meaning[1;31m'[0m[31m[0m].keys).to include(japanese_emoticon)[0m
     [31m[0m
     [31mNoMethodError:[0m
     [31m  undefined method `keys' for nil:NilClass[0m
     [36m# ./spec/translator_spec.rb:27:in `block (4 levels) in <top (required)>'[0m
     [36m# ./spec/translator_spec.rb:26:in `each'[0m
     [36m# ./spec/translator_spec.rb:26:in `block (3 levels) in <top (required)>'[0m

  4) #load_library return value the emoticon keys inside the 'get_meaning' hash point to their meanings
     [31mFailure/Error: [0m[32mexpect[0m(result[[31m[1;31m'[0m[31mget_meaning[1;31m'[0m[31m[0m][japanese_emoticon]).to eq(meaning)[0m
     [31m[0m
     [31mNoMethodError:[0m
     [31m  undefined method `[]' for nil:NilClass[0m
     [36m# ./spec/translator_spec.rb:39:in `block (4 levels) in <top (required)>'[0m
     [36m# ./spec/translator_spec.rb:38:in `each'[0m
     [36m# ./spec/translator_spec.rb:38:in `block (3 levels) in <top (required)>'[0m

  5) #load_library return value the keys inside the 'get_emoticon' hash are the English emoticons
     [31mFailure/Error: [0m[32mexpect[0m(result[[31m[1;31m'[0m[31mget_emoticon[1;31m'[0m[31m[0m].keys).to include(english_emoticon)[0m
     [31m[0m
     [31mNoMethodError:[0m
     [31m  undefined method `keys' for nil:NilClass[0m
     [36m# ./spec/translator_spec.rb:46:in `block (4 levels) in <top (required)>'[0m
     [36m# ./spec/translator_spec.rb:45:in `each'[0m
     [36m# ./spec/translator_spec.rb:45:in `block (3 levels) in <top (required)>'[0m

  6) #load_library return value the emoticon keys inside the 'get_emoticon' hash point to their Japanese equivalents
     [31mFailure/Error: [0m[32mexpect[0m(result[[31m[1;31m'[0m[31mget_emoticon[1;31m'[0m[31m[0m][english_emoticon]).to eq(japanese_emoticon)[0m
     [31m[0m
     [31mNoMethodError:[0m
     [31m  undefined method `[]' for nil:NilClass[0m
     [36m# ./spec/translator_spec.rb:53:in `block (4 levels) in <top (required)>'[0m
     [36m# ./spec/translator_spec.rb:52:in `each'[0m
     [36m# ./spec/translator_spec.rb:52:in `block (3 levels) in <top (required)>'[0m

  7) #get_japanese_emoticon accepts two arguments, the YAML file path and the emoticon
     [31mFailure/Error: [0m[32mexpect[0m { get_japanese_emoticon([31m[1;31m"[0m[31m./lib/emoticons.yml[1;31m"[0m[31m[0m, [31m[1;31m"[0m[31m:)[1;31m"[0m[31m[0m) }.to_not raise_error[0m
     [31m[0m
     [31m  expected no Exception, got #<ArgumentError: wrong number of arguments (given 2, expected 0)> with backtrace:[0m
     [31m    # ./lib/translator.rb:10:in `get_japanese_emoticon'[0m
     [31m    # ./spec/translator_spec.rb:64:in `block (3 levels) in <top (required)>'[0m
     [31m    # ./spec/translator_spec.rb:64:in `block (2 levels) in <top (required)>'[0m
     [36m# ./spec/translator_spec.rb:64:in `block (2 levels) in <top (required)>'[0m

  8) #get_japanese_emoticon calls on #load_library and gives it the argument of the file path
     [31mFailure/Error:[0m
     [31m  [0m[32mdef[0m [1;34mget_japanese_emoticon[0m[0m
     [31m    [0m[1;30m# code goes here[0m[0m
     [31m  [0m[32mend[0m[0m
     [31m[0m
     [31mArgumentError:[0m
     [31m  wrong number of arguments (given 2, expected 0)[0m
     [36m# ./lib/translator.rb:10:in `get_japanese_emoticon'[0m
     [36m# ./spec/translator_spec.rb:72:in `block (2 levels) in <top (required)>'[0m

  9) #get_japanese_emoticon returns the Japanese equivalent of an English grinning
     [31mFailure/Error:[0m
     [31m  [0m[32mdef[0m [1;34mget_japanese_emoticon[0m[0m
     [31m    [0m[1;30m# code goes here[0m[0m
     [31m  [0m[32mend[0m[0m
     [31m[0m
     [31mArgumentError:[0m
     [31m  wrong number of arguments (given 2, expected 0)[0m
     [36m# ./lib/translator.rb:10:in `get_japanese_emoticon'[0m
     [36m# ./spec/translator_spec.rb:76:in `block (2 levels) in <top (required)>'[0m

  10) #get_japanese_emoticon returns the Japanese equivalent of an English happy
      [31mFailure/Error:[0m
      [31m  [0m[32mdef[0m [1;34mget_japanese_emoticon[0m[0m
      [31m    [0m[1;30m# code goes here[0m[0m
      [31m  [0m[32mend[0m[0m
      [31m[0m
      [31mArgumentError:[0m
      [31m  wrong number of arguments (given 2, expected 0)[0m
      [36m# ./lib/translator.rb:10:in `get_japanese_emoticon'[0m
      [36m# ./spec/translator_spec.rb:80:in `block (2 levels) in <top (required)>'[0m

  11) #get_japanese_emoticon returns the Japanese equivalent of an English sad
      [31mFailure/Error:[0m
      [31m  [0m[32mdef[0m [1;34mget_japanese_emoticon[0m[0m
      [31m    [0m[1;30m# code goes here[0m[0m
      [31m  [0m[32mend[0m[0m
      [31m[0m
      [31mArgumentError:[0m
      [31m  wrong number of arguments (given 2, expected 0)[0m
      [36m# ./lib/translator.rb:10:in `get_japanese_emoticon'[0m
      [36m# ./spec/translator_spec.rb:84:in `block (2 levels) in <top (required)>'[0m

  12) #get_japanese_emoticon returns an apology message if the argument is not a known emoticon
      [31mFailure/Error:[0m
      [31m  [0m[32mdef[0m [1;34mget_japanese_emoticon[0m[0m
      [31m    [0m[1;30m# code goes here[0m[0m
      [31m  [0m[32mend[0m[0m
      [31m[0m
      [31mArgumentError:[0m
      [31m  wrong number of arguments (given 2, expected 0)[0m
      [36m# ./lib/translator.rb:10:in `get_japanese_emoticon'[0m
      [36m# ./spec/translator_spec.rb:89:in `block (2 levels) in <top (required)>'[0m

  13) #get_english_meaning accepts two arguments, the YAML file path and the emoticon
      [31mFailure/Error: [0m[32mexpect[0m { get_english_meaning([31m[1;31m"[0m[31m./lib/emoticons.yml[1;31m"[0m[31m[0m, [31m[1;31m"[0m[31m(ï¼´â–½ï¼´)[1;31m"[0m[31m[0m) }.to_not raise_error[0m
      [31m[0m
      [31m  expected no Exception, got #<ArgumentError: wrong number of arguments (given 2, expected 0)> with backtrace:[0m
      [31m    # ./lib/translator.rb:14:in `get_english_meaning'[0m
      [31m    # ./spec/translator_spec.rb:97:in `block (3 levels) in <top (required)>'[0m
      [31m    # ./spec/translator_spec.rb:97:in `block (2 levels) in <top (required)>'[0m
      [36m# ./spec/translator_spec.rb:97:in `block (2 levels) in <top (required)>'[0m

  14) #get_english_meaning calls on #load_library and gives it the argument of the file path
      [31mFailure/Error:[0m
      [31m  [0m[32mdef[0m [1;34mget_english_meaning[0m[0m
      [31m    [0m[1;30m# code goes here[0m[0m
      [31m  [0m[32mend[0m[0m
      [31m[0m
      [31mArgumentError:[0m
      [31m  wrong number of arguments (given 2, expected 0)[0m
      [36m# ./lib/translator.rb:14:in `get_english_meaning'[0m
      [36m# ./spec/translator_spec.rb:105:in `block (2 levels) in <top (required)>'[0m

  15) #get_english_meaning returns the English meaning of the Japanese emoticon (ï¼¾ï½–ï¼¾)
      [31mFailure/Error:[0m
      [31m  [0m[32mdef[0m [1;34mget_english_meaning[0m[0m
      [31m    [0m[1;30m# code goes here[0m[0m
      [31m  [0m[32mend[0m[0m
      [31m[0m
      [31mArgumentError:[0m
      [31m  wrong number of arguments (given 2, expected 0)[0m
      [36m# ./lib/translator.rb:14:in `get_english_meaning'[0m
      [36m# ./spec/translator_spec.rb:109:in `block (2 levels) in <top (required)>'[0m

  16) #get_english_meaning returns the English meaning of the Japanese emoticon (ï¿£ãƒ¼ï¿£)
      [31mFailure/Error:[0m
      [31m  [0m[32mdef[0m [1;34mget_english_meaning[0m[0m
      [31m    [0m[1;30m# code goes here[0m[0m
      [31m  [0m[32mend[0m[0m
      [31m[0m
      [31mArgumentError:[0m
      [31m  wrong number of arguments (given 2, expected 0)[0m
      [36m# ./lib/translator.rb:14:in `get_english_meaning'[0m
      [36m# ./spec/translator_spec.rb:113:in `block (2 levels) in <top (required)>'[0m

  17) #get_english_meaning returns the English meaning of the Japanese emoticon (ï¼´â–½ï¼´)
      [31mFailure/Error:[0m
      [31m  [0m[32mdef[0m [1;34mget_english_meaning[0m[0m
      [31m    [0m[1;30m# code goes here[0m[0m
      [31m  [0m[32mend[0m[0m
      [31m[0m
      [31mArgumentError:[0m
      [31m  wrong number of arguments (given 2, expected 0)[0m
      [36m# ./lib/translator.rb:14:in `get_english_meaning'[0m
      [36m# ./spec/translator_spec.rb:117:in `block (2 levels) in <top (required)>'[0m

  18) #get_english_meaning returns an apology message if the argument is not a known emoticon
      [31mFailure/Error:[0m
      [31m  [0m[32mdef[0m [1;34mget_english_meaning[0m[0m
      [31m    [0m[1;30m# code goes here[0m[0m
      [31m  [0m[32mend[0m[0m
      [31m[0m
      [31mArgumentError:[0m
      [31m  wrong number of arguments (given 2, expected 0)[0m
      [36m# ./lib/translator.rb:14:in `get_english_meaning'[0m
      [36m# ./spec/translator_spec.rb:122:in `block (2 levels) in <top (required)>'[0m

Finished in 0.02518 seconds (files took 0.10887 seconds to load)
[31m20 examples, 18 failures[0m

Failed examples:

[31mrspec ./spec/translator_spec.rb:15[0m [36m# #load_library return value has two keys, 'get_meaning' and 'get_emoticon'[0m
[31mrspec ./spec/translator_spec.rb:20[0m [36m# #load_library return value the keys 'get_meaning' and 'get_emoticon' point to inner hashes[0m
[31mrspec ./spec/translator_spec.rb:24[0m [36m# #load_library return value the keys inside the 'get_meaning' hash are the Japanese emoticons[0m
[31mrspec ./spec/translator_spec.rb:31[0m [36m# #load_library return value the emoticon keys inside the 'get_meaning' hash point to their meanings[0m
[31mrspec ./spec/translator_spec.rb:43[0m [36m# #load_library return value the keys inside the 'get_emoticon' hash are the English emoticons[0m
[31mrspec ./spec/translator_spec.rb:50[0m [36m# #load_library return value the emoticon keys inside the 'get_emoticon' hash point to their Japanese equivalents[0m
[31mrspec ./spec/translator_spec.rb:63[0m [36m# #get_japanese_emoticon accepts two arguments, the YAML file path and the emoticon[0m
[31mrspec ./spec/translator_spec.rb:67[0m [36m# #get_japanese_emoticon calls on #load_library and gives it the argument of the file path[0m
[31mrspec ./spec/translator_spec.rb:75[0m [36m# #get_japanese_emoticon returns the Japanese equivalent of an English grinning[0m
[31mrspec ./spec/translator_spec.rb:79[0m [36m# #get_japanese_emoticon returns the Japanese equivalent of an English happy[0m
[31mrspec ./spec/translator_spec.rb:83[0m [36m# #get_japanese_emoticon returns the Japanese equivalent of an English sad[0m
[31mrspec ./spec/translator_spec.rb:87[0m [36m# #get_japanese_emoticon returns an apology message if the argument is not a known emoticon[0m
[31mrspec ./spec/translator_spec.rb:96[0m [36m# #get_english_meaning accepts two arguments, the YAML file path and the emoticon[0m
[31mrspec ./spec/translator_spec.rb:100[0m [36m# #get_english_meaning calls on #load_library and gives it the argument of the file path[0m
[31mrspec ./spec/translator_spec.rb:108[0m [36m# #get_english_meaning returns the English meaning of the Japanese emoticon (ï¼¾ï½–ï¼¾)[0m
[31mrspec ./spec/translator_spec.rb:112[0m [36m# #get_english_meaning returns the English meaning of the Japanese emoticon (ï¿£ãƒ¼ï¿£)[0m
[31mrspec ./spec/translator_spec.rb:116[0m [36m# #get_english_meaning returns the English meaning of the Japanese emoticon (ï¼´â–½ï¼´)[0m
[31mrspec ./spec/translator_spec.rb:120[0m [36m# #get_english_meaning returns an apology message if the argument is not a known emoticon[0m

